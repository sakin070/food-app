{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5/theme-18cbe2cc.js","../node_modules/@ionic/core/dist/esm-es5/ion-action-sheet-controller_8.entry.js"],"names":["hostContext","selector","el","closest","createColorClasses","color","_a","length","undefined","getClassMap","classes","map","Array","isArray","split","filter","c","trim","getClassList","forEach","SCHEME","openURL","url","ev","direction","router","this","test","document","querySelector","preventDefault","push","ActionSheetController","class_1","hostRef","prototype","create","options","dismiss","data","role","id","getTop","AlertController","class_2","Anchor","_this","routerDirection","onClick","href","componentDidLoad","console","warn","render","mode","attrs","rel","class","Object","assign","defineProperty","get","enumerable","configurable","LoadingController","class_3","ModalController","class_4","PickerController","class_5","PopoverController","class_6","ToastController","class_7"],"mappings":"6GAAA,mJAEIA,EAAc,SAAqBC,EAAUC,GAC/C,OAAgC,OAAzBA,EAAGC,QAAQF,IAOhBG,EAAqB,SAA4BC,GACnD,IAAIC,EAEJ,MAAwB,kBAAVD,GAAsBA,EAAME,OAAS,IAAKD,EAAK,CAC3D,aAAa,IACT,aAAeD,IAAS,EAAMC,QAAME,GAkBxCC,EAAc,SAAqBC,GACrC,IAAIC,EAAM,GAIV,OApBiB,SAAsBD,GACvC,YAAgBF,IAAZE,GACUE,MAAMC,QAAQH,GAAWA,EAAUA,EAAQI,MAAM,MAChDC,QAAO,SAAUC,GAC5B,OAAY,MAALA,KACNL,KAAI,SAAUK,GACf,OAAOA,EAAEC,UACRF,QAAO,SAAUC,GAClB,MAAa,KAANA,KAIJ,GAKPE,CAAaR,GAASS,SAAQ,SAAUH,GACtC,OAAOL,EAAIK,IAAK,KAEXL,GAGLS,EAAS,uBAETC,EAAU,SAAiBC,EAAKC,EAAIC,GACtC,OAAO,iBAAU,OAAQ,OAAQ,GAAQ,WACvC,IAAIC,EACJ,OAAO,YAAYC,MAAM,SAAUpB,GACjC,OAAW,MAAPgB,GAA0B,MAAXA,EAAI,KAAeF,EAAOO,KAAKL,KAChDG,EAASG,SAASC,cAAc,gBAGpB,MAANN,GACFA,EAAGO,iBAGE,CAAC,EAENL,EAAOM,KAAKT,EAAKE,KAIhB,CAAC,GAEN,W,gCC/DR,4dAMIQ,EAEJ,WACE,SAASC,EAAQC,GACf,YAAiBR,KAAMQ,GA0CzB,OAjCAD,EAAQE,UAAUC,OAAS,SAAUC,GACnC,OAAO,YAAc,mBAAoBA,IAc3CJ,EAAQE,UAAUG,QAAU,SAAUC,EAAMC,EAAMC,GAChD,OAAO,YAAeb,SAAUW,EAAMC,EAAM,mBAAoBC,IAOlER,EAAQE,UAAUO,OAAS,WACzB,OAAO,YAAUhB,UAAM,OAAQ,GAAQ,WACrC,OAAO,YAAYA,MAAM,SAAUpB,GACjC,MAAO,CAAC,EAEN,YAAWsB,SAAU,4BAKtBK,EA5CT,GA+CIU,EAEJ,WACE,SAASC,EAAQV,GACf,YAAiBR,KAAMQ,GA0CzB,OAjCAU,EAAQT,UAAUC,OAAS,SAAUC,GACnC,OAAO,YAAc,YAAaA,IAcpCO,EAAQT,UAAUG,QAAU,SAAUC,EAAMC,EAAMC,GAChD,OAAO,YAAeb,SAAUW,EAAMC,EAAM,YAAaC,IAO3DG,EAAQT,UAAUO,OAAS,WACzB,OAAO,YAAUhB,UAAM,OAAQ,GAAQ,WACrC,OAAO,YAAYA,MAAM,SAAUpB,GACjC,MAAO,CAAC,EAEN,YAAWsB,SAAU,qBAKtBgB,EA5CT,GA+CIC,EAEJ,WACE,SAASA,EAAOX,GACd,IAAIY,EAAQpB,KAEZ,YAAiBA,KAAMQ,GAMvBR,KAAKqB,gBAAkB,UAEvBrB,KAAKsB,QAAU,SAAUzB,GACvB,YAAQuB,EAAMG,KAAM1B,EAAIuB,EAAMC,kBA6BlC,OAzBAF,EAAOV,UAAUe,iBAAmB,WAClCC,QAAQC,KAAK,iMAGfP,EAAOV,UAAUkB,OAAS,WACxB,IAAI/C,EAEAgD,EAAO,YAAW5B,MAClB6B,EAAQ,CACVN,KAAMvB,KAAKuB,KACXO,IAAK9B,KAAK8B,KAEZ,OAAO,YAAE,IAAM,CACbR,QAAStB,KAAKsB,QACdS,MAAOC,OAAOC,OAAOD,OAAOC,OAAO,GAAI,YAAmBjC,KAAKrB,SAAUC,EAAK,GAAIA,EAAGgD,IAAQ,EAAMhD,EAAG,oBAAqB,EAAMA,KAChI,YAAE,IAAKoD,OAAOC,OAAO,GAAIJ,GAAQ,YAAE,OAAQ,SAGhDG,OAAOE,eAAef,EAAQ,QAAS,CACrCgB,IAAK,WACH,MAAO,0YAETC,YAAY,EACZC,cAAc,IAETlB,EA1CT,GA6CImB,EAEJ,WACE,SAASC,EAAQ/B,GACf,YAAiBR,KAAMQ,GA0CzB,OAjCA+B,EAAQ9B,UAAUC,OAAS,SAAUC,GACnC,OAAO,YAAc,cAAeA,IActC4B,EAAQ9B,UAAUG,QAAU,SAAUC,EAAMC,EAAMC,GAChD,OAAO,YAAeb,SAAUW,EAAMC,EAAM,cAAeC,IAO7DwB,EAAQ9B,UAAUO,OAAS,WACzB,OAAO,YAAUhB,UAAM,OAAQ,GAAQ,WACrC,OAAO,YAAYA,MAAM,SAAUpB,GACjC,MAAO,CAAC,EAEN,YAAWsB,SAAU,uBAKtBqC,EA5CT,GA+CIC,EAEJ,WACE,SAASC,EAAQjC,GACf,YAAiBR,KAAMQ,GA0CzB,OAjCAiC,EAAQhC,UAAUC,OAAS,SAAUC,GACnC,OAAO,YAAc,YAAaA,IAcpC8B,EAAQhC,UAAUG,QAAU,SAAUC,EAAMC,EAAMC,GAChD,OAAO,YAAeb,SAAUW,EAAMC,EAAM,YAAaC,IAO3D0B,EAAQhC,UAAUO,OAAS,WACzB,OAAO,YAAUhB,UAAM,OAAQ,GAAQ,WACrC,OAAO,YAAYA,MAAM,SAAUpB,GACjC,MAAO,CAAC,EAEN,YAAWsB,SAAU,qBAKtBuC,EA5CT,GA+CIC,EAEJ,WACE,SAASC,EAAQnC,GACf,YAAiBR,KAAMQ,GA0CzB,OAjCAmC,EAAQlC,UAAUC,OAAS,SAAUC,GACnC,OAAO,YAAc,aAAcA,IAcrCgC,EAAQlC,UAAUG,QAAU,SAAUC,EAAMC,EAAMC,GAChD,OAAO,YAAeb,SAAUW,EAAMC,EAAM,aAAcC,IAO5D4B,EAAQlC,UAAUO,OAAS,WACzB,OAAO,YAAUhB,UAAM,OAAQ,GAAQ,WACrC,OAAO,YAAYA,MAAM,SAAUpB,GACjC,MAAO,CAAC,EAEN,YAAWsB,SAAU,sBAKtByC,EA5CT,GA+CIC,EAEJ,WACE,SAASC,EAAQrC,GACf,YAAiBR,KAAMQ,GA0CzB,OAjCAqC,EAAQpC,UAAUC,OAAS,SAAUC,GACnC,OAAO,YAAc,cAAeA,IActCkC,EAAQpC,UAAUG,QAAU,SAAUC,EAAMC,EAAMC,GAChD,OAAO,YAAeb,SAAUW,EAAMC,EAAM,cAAeC,IAO7D8B,EAAQpC,UAAUO,OAAS,WACzB,OAAO,YAAUhB,UAAM,OAAQ,GAAQ,WACrC,OAAO,YAAYA,MAAM,SAAUpB,GACjC,MAAO,CAAC,EAEN,YAAWsB,SAAU,uBAKtB2C,EA5CT,GA+CIC,EAEJ,WACE,SAASC,EAAQvC,GACf,YAAiBR,KAAMQ,GAuCzB,OA9BAuC,EAAQtC,UAAUC,OAAS,SAAUC,GACnC,OAAO,YAAc,YAAaA,IAWpCoC,EAAQtC,UAAUG,QAAU,SAAUC,EAAMC,EAAMC,GAChD,OAAO,YAAeb,SAAUW,EAAMC,EAAM,YAAaC,IAO3DgC,EAAQtC,UAAUO,OAAS,WACzB,OAAO,YAAUhB,UAAM,OAAQ,GAAQ,WACrC,OAAO,YAAYA,MAAM,SAAUpB,GACjC,MAAO,CAAC,EAEN,YAAWsB,SAAU,qBAKtB6C,EAzCT","file":"static/js/43.b6a9e0d1.chunk.js","sourcesContent":["import { __awaiter, __generator } from \"tslib\";\n\nvar hostContext = function hostContext(selector, el) {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\n\n\nvar createColorClasses = function createColorClasses(color) {\n  var _a;\n\n  return typeof color === 'string' && color.length > 0 ? (_a = {\n    'ion-color': true\n  }, _a[\"ion-color-\" + color] = true, _a) : undefined;\n};\n\nvar getClassList = function getClassList(classes) {\n  if (classes !== undefined) {\n    var array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array.filter(function (c) {\n      return c != null;\n    }).map(function (c) {\n      return c.trim();\n    }).filter(function (c) {\n      return c !== '';\n    });\n  }\n\n  return [];\n};\n\nvar getClassMap = function getClassMap(classes) {\n  var map = {};\n  getClassList(classes).forEach(function (c) {\n    return map[c] = true;\n  });\n  return map;\n};\n\nvar SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\n\nvar openURL = function openURL(url, ev, direction) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var router;\n    return __generator(this, function (_a) {\n      if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        router = document.querySelector('ion-router');\n\n        if (router) {\n          if (ev != null) {\n            ev.preventDefault();\n          }\n\n          return [2\n          /*return*/\n          , router.push(url, direction)];\n        }\n      }\n\n      return [2\n      /*return*/\n      , false];\n    });\n  });\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };","import { __awaiter, __generator } from \"tslib\";\nimport { r as registerInstance, d as getIonMode, h, H as Host } from './core-ca0488fc.js';\nimport './config-3c7f3790.js';\nimport { h as createOverlay, j as dismissOverlay, k as getOverlay } from './overlays-10640d86.js';\nimport { o as openURL, c as createColorClasses } from './theme-18cbe2cc.js';\n\nvar ActionSheetController =\n/** @class */\nfunction () {\n  function class_1(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  /**\n   * Create an action sheet overlay with action sheet options.\n   *\n   * @param options The options to use to create the action sheet.\n   */\n\n\n  class_1.prototype.create = function (options) {\n    return createOverlay('ion-action-sheet', options);\n  };\n  /**\n   * Dismiss the open action sheet overlay.\n   *\n   * @param data Any data to emit in the dismiss events.\n   * @param role The role of the element that is dismissing the action sheet.\n   * This can be useful in a button handler for determining which button was\n   * clicked to dismiss the action sheet.\n   * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n   * @param id The id of the action sheet to dismiss. If an id is not provided, it will dismiss the most recently opened action sheet.\n   */\n\n\n  class_1.prototype.dismiss = function (data, role, id) {\n    return dismissOverlay(document, data, role, 'ion-action-sheet', id);\n  };\n  /**\n   * Get the most recently opened action sheet overlay.\n   */\n\n\n  class_1.prototype.getTop = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , getOverlay(document, 'ion-action-sheet')];\n      });\n    });\n  };\n\n  return class_1;\n}();\n\nvar AlertController =\n/** @class */\nfunction () {\n  function class_2(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  /**\n   * Create an alert overlay with alert options.\n   *\n   * @param options The options to use to create the alert.\n   */\n\n\n  class_2.prototype.create = function (options) {\n    return createOverlay('ion-alert', options);\n  };\n  /**\n   * Dismiss the open alert overlay.\n   *\n   * @param data Any data to emit in the dismiss events.\n   * @param role The role of the element that is dismissing the alert.\n   * This can be useful in a button handler for determining which button was\n   * clicked to dismiss the alert.\n   * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n   * @param id The id of the alert to dismiss. If an id is not provided, it will dismiss the most recently opened alert.\n   */\n\n\n  class_2.prototype.dismiss = function (data, role, id) {\n    return dismissOverlay(document, data, role, 'ion-alert', id);\n  };\n  /**\n   * Get the most recently opened alert overlay.\n   */\n\n\n  class_2.prototype.getTop = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , getOverlay(document, 'ion-alert')];\n      });\n    });\n  };\n\n  return class_2;\n}();\n\nvar Anchor =\n/** @class */\nfunction () {\n  function Anchor(hostRef) {\n    var _this = this;\n\n    registerInstance(this, hostRef);\n    /**\n     * When using a router, it specifies the transition direction when navigating to\n     * another page using `href`.\n     */\n\n    this.routerDirection = 'forward';\n\n    this.onClick = function (ev) {\n      openURL(_this.href, ev, _this.routerDirection);\n    };\n  }\n\n  Anchor.prototype.componentDidLoad = function () {\n    console.warn('[DEPRECATED][ion-anchor] The <ion-anchor> component has been deprecated. Please use an <ion-router-link> if you are using a vanilla JS or Stencil project or an <a> with the Angular router.');\n  };\n\n  Anchor.prototype.render = function () {\n    var _a;\n\n    var mode = getIonMode(this);\n    var attrs = {\n      href: this.href,\n      rel: this.rel\n    };\n    return h(Host, {\n      onClick: this.onClick,\n      class: Object.assign(Object.assign({}, createColorClasses(this.color)), (_a = {}, _a[mode] = true, _a['ion-activatable'] = true, _a))\n    }, h(\"a\", Object.assign({}, attrs), h(\"slot\", null)));\n  };\n\n  Object.defineProperty(Anchor, \"style\", {\n    get: function get() {\n      return \":host{--background:transparent;--color:var(--ion-color-primary,#3880ff);background:var(--background);color:var(--color)}:host(.ion-color){color:var(--ion-color-base)}a{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit}\";\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Anchor;\n}();\n\nvar LoadingController =\n/** @class */\nfunction () {\n  function class_3(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  /**\n   * Create a loading overlay with loading options.\n   *\n   * @param options The options to use to create the loading.\n   */\n\n\n  class_3.prototype.create = function (options) {\n    return createOverlay('ion-loading', options);\n  };\n  /**\n   * Dismiss the open loading overlay.\n   *\n   * @param data Any data to emit in the dismiss events.\n   * @param role The role of the element that is dismissing the loading.\n   * This can be useful in a button handler for determining which button was\n   * clicked to dismiss the loading.\n   * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n   * @param id The id of the loading to dismiss. If an id is not provided, it will dismiss the most recently opened loading.\n   */\n\n\n  class_3.prototype.dismiss = function (data, role, id) {\n    return dismissOverlay(document, data, role, 'ion-loading', id);\n  };\n  /**\n   * Get the most recently opened loading overlay.\n   */\n\n\n  class_3.prototype.getTop = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , getOverlay(document, 'ion-loading')];\n      });\n    });\n  };\n\n  return class_3;\n}();\n\nvar ModalController =\n/** @class */\nfunction () {\n  function class_4(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  /**\n   * Create a modal overlay with modal options.\n   *\n   * @param options The options to use to create the modal.\n   */\n\n\n  class_4.prototype.create = function (options) {\n    return createOverlay('ion-modal', options);\n  };\n  /**\n   * Dismiss the open modal overlay.\n   *\n   * @param data Any data to emit in the dismiss events.\n   * @param role The role of the element that is dismissing the modal.\n   * This can be useful in a button handler for determining which button was\n   * clicked to dismiss the modal.\n   * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n   * @param id The id of the modal to dismiss. If an id is not provided, it will dismiss the most recently opened modal.\n   */\n\n\n  class_4.prototype.dismiss = function (data, role, id) {\n    return dismissOverlay(document, data, role, 'ion-modal', id);\n  };\n  /**\n   * Get the most recently opened modal overlay.\n   */\n\n\n  class_4.prototype.getTop = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , getOverlay(document, 'ion-modal')];\n      });\n    });\n  };\n\n  return class_4;\n}();\n\nvar PickerController =\n/** @class */\nfunction () {\n  function class_5(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  /**\n   * Create a picker overlay with picker options.\n   *\n   * @param options The options to use to create the picker.\n   */\n\n\n  class_5.prototype.create = function (options) {\n    return createOverlay('ion-picker', options);\n  };\n  /**\n   * Dismiss the open picker overlay.\n   *\n   * @param data Any data to emit in the dismiss events.\n   * @param role The role of the element that is dismissing the picker.\n   * This can be useful in a button handler for determining which button was\n   * clicked to dismiss the picker.\n   * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n   * @param id The id of the picker to dismiss. If an id is not provided, it will dismiss the most recently opened picker.\n   */\n\n\n  class_5.prototype.dismiss = function (data, role, id) {\n    return dismissOverlay(document, data, role, 'ion-picker', id);\n  };\n  /**\n   * Get the most recently opened picker overlay.\n   */\n\n\n  class_5.prototype.getTop = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , getOverlay(document, 'ion-picker')];\n      });\n    });\n  };\n\n  return class_5;\n}();\n\nvar PopoverController =\n/** @class */\nfunction () {\n  function class_6(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  /**\n   * Create a popover overlay with popover options.\n   *\n   * @param options The options to use to create the popover.\n   */\n\n\n  class_6.prototype.create = function (options) {\n    return createOverlay('ion-popover', options);\n  };\n  /**\n   * Dismiss the open popover overlay.\n   *\n   * @param data Any data to emit in the dismiss events.\n   * @param role The role of the element that is dismissing the popover.\n   * This can be useful in a button handler for determining which button was\n   * clicked to dismiss the popover.\n   * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n   * @param id The id of the popover to dismiss. If an id is not provided, it will dismiss the most recently opened popover.\n   */\n\n\n  class_6.prototype.dismiss = function (data, role, id) {\n    return dismissOverlay(document, data, role, 'ion-popover', id);\n  };\n  /**\n   * Get the most recently opened popover overlay.\n   */\n\n\n  class_6.prototype.getTop = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , getOverlay(document, 'ion-popover')];\n      });\n    });\n  };\n\n  return class_6;\n}();\n\nvar ToastController =\n/** @class */\nfunction () {\n  function class_7(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  /**\n   * Create a toast overlay with toast options.\n   *\n   * @param options The options to use to create the toast.\n   */\n\n\n  class_7.prototype.create = function (options) {\n    return createOverlay('ion-toast', options);\n  };\n  /**\n   * Dismiss the open toast overlay.\n   *\n   * @param data Any data to emit in the dismiss events.\n   * @param role The role of the element that is dismissing the toast. For example, 'cancel' or 'backdrop'.\n   * @param id The id of the toast to dismiss. If an id is not provided, it will dismiss the most recently opened toast.\n   */\n\n\n  class_7.prototype.dismiss = function (data, role, id) {\n    return dismissOverlay(document, data, role, 'ion-toast', id);\n  };\n  /**\n   * Get the most recently opened toast overlay.\n   */\n\n\n  class_7.prototype.getTop = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , getOverlay(document, 'ion-toast')];\n      });\n    });\n  };\n\n  return class_7;\n}();\n\nexport { ActionSheetController as ion_action_sheet_controller, AlertController as ion_alert_controller, Anchor as ion_anchor, LoadingController as ion_loading_controller, ModalController as ion_modal_controller, PickerController as ion_picker_controller, PopoverController as ion_popover_controller, ToastController as ion_toast_controller };"],"sourceRoot":""}